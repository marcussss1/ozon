// Code generated by MockGen. DO NOT EDIT.
// Source: usecase.go

// Package mock_links is a generated GoMock package.
package mock_links

import (
	context "context"
	model "project/internal/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUsecase is a mock of Usecase interface.
type MockUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockUsecaseMockRecorder
}

// MockUsecaseMockRecorder is the mock recorder for MockUsecase.
type MockUsecaseMockRecorder struct {
	mock *MockUsecase
}

// NewMockUsecase creates a new mock instance.
func NewMockUsecase(ctrl *gomock.Controller) *MockUsecase {
	mock := &MockUsecase{ctrl: ctrl}
	mock.recorder = &MockUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUsecase) EXPECT() *MockUsecaseMockRecorder {
	return m.recorder
}

// GetOriginalLink mocks base method.
func (m *MockUsecase) GetOriginalLink(ctx context.Context, abbreviatedUrl string) (model.Link, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOriginalLink", ctx, abbreviatedUrl)
	ret0, _ := ret[0].(model.Link)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOriginalLink indicates an expected call of GetOriginalLink.
func (mr *MockUsecaseMockRecorder) GetOriginalLink(ctx, abbreviatedUrl interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOriginalLink", reflect.TypeOf((*MockUsecase)(nil).GetOriginalLink), ctx, abbreviatedUrl)
}

// SaveAbbreviatedLink mocks base method.
func (m *MockUsecase) SaveAbbreviatedLink(ctx context.Context, originalUrl string) (model.Link, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveAbbreviatedLink", ctx, originalUrl)
	ret0, _ := ret[0].(model.Link)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveAbbreviatedLink indicates an expected call of SaveAbbreviatedLink.
func (mr *MockUsecaseMockRecorder) SaveAbbreviatedLink(ctx, originalUrl interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveAbbreviatedLink", reflect.TypeOf((*MockUsecase)(nil).SaveAbbreviatedLink), ctx, originalUrl)
}
