version: '3.9'

services:
  api:
    build:
      context: .
      dockerfile: ./Dockerfile-api
    image: api
    container_name: api
    hostname: api
    restart: always
    depends_on:
      - links
    ports:
      - "8081:8081"
    networks:
      - backend-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8081/health" ]
      interval: 60m
      timeout: 10s
      retries: 3

  links:
    build:
      context: .
      dockerfile: ./Dockerfile-links
      args:
        STORAGE: "postgres"
    image: links
    container_name: links
    hostname: links
    restart: always
    depends_on:
      - postgres
    ports:
      - "8082:8082"
    networks:
      - backend-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8082/health" ]
      interval: 60m
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:latest
    container_name: postgres
    hostname: postgres
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - ./db/001_init_up.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5432/health" ]
      interval: 60m
      timeout: 10s
      retries: 3

networks:
  backend-network:
    name: "backend-network"
    driver: bridge

volumes:
  postgres_data: { }
