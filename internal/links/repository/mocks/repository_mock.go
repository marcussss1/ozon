// Code generated by MockGen. DO NOT EDIT.
// Source: repository.go

// Package mock_links is a generated GoMock package.
package mock_links

import (
	context "context"
	model "project/internal/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRepository is a mock of Repository interface.
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository.
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance.
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// CheckExistAbbreviatedLink mocks base method.
func (m *MockRepository) CheckExistAbbreviatedLink(ctx context.Context, abbreviatedUrl string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckExistAbbreviatedLink", ctx, abbreviatedUrl)
	ret0, _ := ret[0].(error)
	return ret0
}

// CheckExistAbbreviatedLink indicates an expected call of CheckExistAbbreviatedLink.
func (mr *MockRepositoryMockRecorder) CheckExistAbbreviatedLink(ctx, abbreviatedUrl interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckExistAbbreviatedLink", reflect.TypeOf((*MockRepository)(nil).CheckExistAbbreviatedLink), ctx, abbreviatedUrl)
}

// GetOriginalUrl mocks base method.
func (m *MockRepository) GetOriginalUrl(ctx context.Context, abbreviatedUrl string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOriginalUrl", ctx, abbreviatedUrl)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOriginalUrl indicates an expected call of GetOriginalUrl.
func (mr *MockRepositoryMockRecorder) GetOriginalUrl(ctx, abbreviatedUrl interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOriginalUrl", reflect.TypeOf((*MockRepository)(nil).GetOriginalUrl), ctx, abbreviatedUrl)
}

// SaveAbbreviatedLink mocks base method.
func (m *MockRepository) SaveAbbreviatedLink(ctx context.Context, link model.LinkDB) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveAbbreviatedLink", ctx, link)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveAbbreviatedLink indicates an expected call of SaveAbbreviatedLink.
func (mr *MockRepositoryMockRecorder) SaveAbbreviatedLink(ctx, link interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveAbbreviatedLink", reflect.TypeOf((*MockRepository)(nil).SaveAbbreviatedLink), ctx, link)
}
